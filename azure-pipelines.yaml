jobs:
- job: unit_tests
  variables:
    - name: cpp
      value: |
        cd $(Build.SourcesDirectory)
        npx haxe $(hxml)
        ./tests/bin/cpp/Main-debug
    - name: cppia
      value: |
        cd $(Build.SourcesDirectory)
        mkdir -p tests/bin/cppia
        npx haxe host.hxml
        npx haxe $(hxml)

        ./tests/bin/host/Host
    - name: hashlink
      value: |
        # Manually build hashlink
        sudo apt-get install libpng-dev libturbojpeg-dev libvorbis-dev libopenal-dev libsdl2-dev libmbedtls-dev libuv1-dev
        git clone https://github.com/HaxeFoundation/hashlink
        cd hashlink
        git checkout 1.11
        make
        sudo make install

        # usr/local/lib isn't searched for shared objects by default.
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

        cd $(Build.SourcesDirectory)
        npx haxe $(hxml)
        hl tests/bin/hl/out.hl
    - name: js
      value: |
        npx haxe $(hxml)
        node tests/bin/js/out.js
    - name: jvm
      value: |
        npx haxe $(hxml)
        java -jar tests/bin/jvm/out.jar
    - name: interp
      value: npx haxe $(hxml)
  strategy:
    matrix:
      'cpp':
        name: cpp
        hxml: test-cpp.hxml
        cmd: $(cpp)
      'cppia':
        name: cppia
        hxml: test-cppia.hxml
        cmd: $(cppia)
      'hl':
        name: hashlink
        hxml: test-hl.hxml
        cmd: $(hashlink)
      'js':
        name: js
        hxml: test-js.hxml
        cmd: $(js)
      'jvm':
        name: jvm
        hxml: test-jvm.hxml
        cmd: $(jvm)
      'interp':
        name: interp
        hxml: test-interp.hxml
        cmd: $(interp)
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: NodeTool@0
      displayName: Node
      inputs:
        versionSpec: '14.15.x'
    - task: Npm@1
      displayName: Restore
      inputs:
        command: 'ci'
    - script: eval $(cmd)
      displayName: Run
    - task: PublishTestResults@2
      displayName: Tests
      inputs:
        testResultsFormat: XUnit
        testResultsFiles: '*-tests.xml'
        testRunTitle: $(name)
        searchFolder: $(Build.SourcesDirectory)
        failTaskOnFailedTests: true
    - script: bash <(curl -s https://codecov.io/bash) -f lcov.info
      displayName: Coverage

- job: run_sample
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: NodeTool@0
      displayName: Node
      inputs:
        versionSpec: '14.15.x'
    - task: Npm@1
      displayName: Restore
      inputs:
        command: 'ci'
    - script: npx haxe run.hxml
      displayName: Run
      workingDirectory: $(Build.SourcesDirectory)/sample
      failOnStderr: true